name: PR
on:
    pull_request:
        branches:
            - "*"

jobs:
    sanity:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ./go.mod

            - name: Install dependencies
              run: go mod tidy

            - name: Shim frontend
              working-directory: pkg/client/frontend
              run: |
                  mkdir -p dist
                  touch -f dist/ignore

            # - name: Refresh protobuf definitions

            - name: Generate code
              run: go generate ./...

            - name: Run tests
              run: go test ./...

            - name: Lint code
              uses: golangci/golangci-lint-action@v6
              with:
                  version: latest

    build-server:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        env:
            OUT_PATH: ${{ github.workspace }}/pkg/server/bin/Server
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ./go.mod

            # - name: Refresh protobuf definitions

            - name: Generate code
              run: go generate ./...

            - name: Build server
              working-directory: pkg/server
              run: go build -o ${{ env.OUT_PATH }}

            - name: Upload server
              uses: actions/upload-artifact@v4
              with:
                  name: Server
                  path: ${{ env.OUT_PATH }}
                  if-no-files-found: error
                  overwrite: true

    build-binaries:
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: NukeShip
                      os: ubuntu-latest
                      platform: linux/amd64
                    - name: NukeShip.exe
                      os: windows-latest
                      platform: windows/amd64
                    - name: nukeship
                      os: macos-latest
                      platform: darwin/universal
        runs-on: ${{ matrix.os }}
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ./go.mod

            # - name: Refresh protobuf definitions

            - name: Generate code
              run: go generate ./...

            - name: Build binary
              uses: passeriform/wails-build-action@main
              with:
                  app-working-directory: ${{ github.workspace }}/pkg/client
                  build-obfuscate: true
                  build-name: ${{ matrix.name }}
                  build-platform: ${{ matrix.platform }}
                  macos-artifact-name: "NukeShip"
