name: PR
on:
    pull_request:
        branches:
            - "*"

jobs:
    server-sanity:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: passeriform/go-grpc-bootstrap-action@latest
              with:
                  protobuf-directory: internal/pb
                  generate-code: true

            - name: Shim embedding
              working-directory: pkg/client/frontend
              run: |
                  mkdir -p dist
                  touch -f dist/ignore

            - name: Run tests
              run: go test ./...

            - name: Lint code
              uses: golangci/golangci-lint-action@v7
              with:
                  version: latest

    client-sanity:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        env:
            working-directory: pkg/client/frontend
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4

            - name: Run frontend tests
              working-directory: ${{ env.working-directory}}
              run: npm run test

            - name: Lint frontend tests
              working-directory: ${{ env.working-directory}}
              run: npm run lint

    build-server:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        env:
            OUT_PATH: ${{ github.workspace }}/pkg/server/bin/Server
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: passeriform/go-grpc-bootstrap-action@latest
              with:
                  protobuf-directory: internal/pb
                  generate-code: true

            - name: Build server
              working-directory: pkg/server
              run: go build -o ${{ env.OUT_PATH }}

            - name: Upload server
              uses: actions/upload-artifact@v4
              with:
                  name: Server
                  path: ${{ env.OUT_PATH }}
                  if-no-files-found: error
                  overwrite: true

    build-binaries:
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: NukeShip
                      os: ubuntu-latest
                      platform: linux/amd64
                    - name: NukeShip.exe
                      os: windows-latest
                      platform: windows/amd64
                    - name: nukeship
                      os: macos-latest
                      platform: darwin/universal
        runs-on: ${{ matrix.os }}
        permissions:
            contents: read
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: passeriform/go-grpc-bootstrap-action@latest
              with:
                  protobuf-directory: internal/pb
                  generate-code: true

            - name: Build binary
              uses: passeriform/wails-build-action@main
              with:
                  app-working-directory: pkg/client
                  build-obfuscate: true
                  build-name: ${{ matrix.name }}
                  build-platform: ${{ matrix.platform }}
                  macos-artifact-name: "NukeShip"
